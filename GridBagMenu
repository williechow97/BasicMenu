import java.awt.*;
import javax.swing.*;

public static Scanner userScanner = new Scanner(System.in);
	JButton button1, button2, button3;
	static JButton addSource;
	
	public static void GridBag(){
		//creating frame
		JFrame frame = new JFrame("Test");
		frame.setSize(500, 500);
		frame.setVisible(true);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		//create panel with grid bag layout
		JPanel panel = new JPanel(new GridBagLayout());
		frame.getContentPane().add(panel);
		GridBagConstraints c = new GridBagConstraints();
		
		//create buttons
		JButton file = new JButton("Enter a file");
		addSource = new JButton("Add Source");
		JButton addSink = new JButton("Add Sink");
		JButton removeSource = new JButton("Remove Source");
		JButton removeSink = new JButton("Remove Sink");
		JButton runSeg = new JButton("Run Segmentation");
		JButton saveSeg = new JButton("Save Segmentation");
		JButton saveGraph = new JButton ("Save Graph Model");
		JButton displayGraph = new JButton ("Display the Graph");
		
		addSource.setEnabled(false);
		//place buttons on the grid and add to the panel with an ActionListener
		c.insets = new Insets(10, 10, 10, 10);
		c.gridx = 0;
		c.gridy = 0;
		panel.add(file, c);
		file.addActionListener(new Action());
		c.gridx = 0;
		c.gridy = 1;
		panel.add(addSource, c);
		addSource.addActionListener(new Action());
		
		c.gridx = 0;
		c.gridy = 2;
		panel.add(addSink, c);
		addSink.addActionListener(new Action());
		
		c.gridx = 0;
		c.gridy = 3;
		panel.add(removeSource, c);
		removeSource.addActionListener(new Action());
		
		c.gridx = 0;
		c.gridy = 4;
		panel.add(removeSink, c);
		removeSink.addActionListener(new Action());
		
		c.gridx = 0;
		c.gridy = 5;
		panel.add(runSeg, c);
		runSeg.addActionListener(new Action());
		
		c.gridx = 0;
		c.gridy = 6;
		panel.add(saveSeg, c);
		saveSeg.addActionListener(new Action());
		
		c.gridx = 0;
		c.gridy = 7;
		panel.add(saveGraph, c);
		saveGraph.addActionListener(new Action());
		
		c.gridx = 0;
		c.gridy = 8;
		panel.add(displayGraph, c);
		displayGraph.addActionListener(new Action());
	}
	
	//class to "override" actionPerformed
	//	complete the action of what the user chooses 
	public static class Action implements ActionListener{
		 String input = "";
		public void actionPerformed(ActionEvent e){
			boolean file = false;
			String ac = e.getActionCommand();
			if(ac.equals("Enter a file")){
				String text = JOptionPane.showInputDialog("Enter a File");
				input = text;
				if(openInputFile(text) != null){
					addSource.setEnabled(true);
				}
			}
			else if(ac.equals("Add Source") ){
				JOptionPane.showMessageDialog(null,"Add Source ");
				}
			else if(ac.equals("Add Sink") && file){
				JOptionPane.showMessageDialog(null,"Add Sink");
			}
			else if(ac.equals("Remove Source")){
				JOptionPane.showMessageDialog(null,"Remove Source");
			}
			else if(ac.equals("Remove Sink")){
				JOptionPane.showMessageDialog(null,"Remove Sink");
			}
			else if(ac.equals("Run Segmentation")){
				JOptionPane.showMessageDialog(null,"Run Segmentation");
			}
			else if(ac.equals("Save Graph Model")){
				JOptionPane.showMessageDialog(null,"Save Graph Model");
			}
			else if(ac.equals("Save Segmentation")){
				JOptionPane.showMessageDialog(null,"Save Segmentation");
			}
			else if(ac.equals("Breadth-First Traversal")){
				JOptionPane.showMessageDialog(null,"Breadth-First Traversal");
			}
			else if(ac.equals("Adjacency List")){
				JOptionPane.showMessageDialog(null,"Adjacency List");
			}
			else if(ac.equals("Depth-First Traversal")){
				JOptionPane.showMessageDialog(null,"Depth-First Traversal");
			}
			else if(ac.equals("Display the Graph")){
				displayMenu();
			}
			else{
				JOptionPane.showMessageDialog(null, "Enter a file");
			}
		}
	}
	// opens a text file for input, returns a Scanner:
		public static Scanner openInputFile(String filename)
		{
			Scanner scanner = null;
	        	try{
	        		File file= new File(filename);
	        		scanner = new Scanner(file);
	        		System.out.println("Opening file...\n");
	        	}// end try
	        	catch(FileNotFoundException fe){
	        	   System.out.println("Can't open input file\n");
	       	    return null; // array of 0 elements
	        	} // end catch
	        	return scanner;
		}
		
		//method for the display the graph options
		public static void displayMenu(){
			JFrame frame = new JFrame("Display Menu");
			frame.setVisible(true);
			frame.setSize(300,300);
			JButton bft = new JButton("Breadth-First Traversal");
			JButton adj = new JButton("Adjacency List");
			JButton dft = new JButton("Depth-First Traversal");
			
			JPanel panel = new JPanel(new GridBagLayout());
			frame.getContentPane().add(panel);
			GridBagConstraints c = new GridBagConstraints();
			c.insets = new Insets(10,10,10, 10);
			
			c.gridx = 0;
			c.gridy = 0;
			panel.add(bft, c);
			bft.addActionListener(new Action());
			c.gridx = 0;
			c.gridy = 1;
			panel.add(adj, c);
			adj.addActionListener(new Action());
			c.gridx = 0;
			c.gridy = 2;
			panel.add(dft, c);
			dft.addActionListener(new Action());
		}
