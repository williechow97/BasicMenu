
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.*;
import java.awt.*;

import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;


//import GridBag.Action;
/**
 *
 * @author Joohong Ahn, Willie
 */
public class Ui extends JFrame  {
	
	// Variables declaration - do not modify                     
    private JLabel image;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton4;
    private JLabel jLabel1;
    private JMenu jMenu1;
    private JMenu jMenu2;
    private JPanel jPanel2;
    private JButton saveSeg, saveGraph, displayGraph;
    // End of variables declaration   
    
    private int source;
    private int sink;
    int xsrc;
    int ysrc;
    int xsnk;
    int ysnk;
            
    public Ui() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jMenu1 = new JMenu();
        jMenu2 = new JMenu();
        jPanel2 = new JPanel();
        image = new JLabel();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton3 = new JButton();
        jButton4 = new JButton();
        jLabel1 = new JLabel();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        image.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                imageMouseClicked(evt);
            }
        });

        jButton1.setText("select image");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("remove source");
        jButton2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("remove sink");
        jButton3.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("run segmentation");
        jButton4.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        
         saveSeg = new JButton("Save Segmentation");
        saveSeg.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent e){
        		saveSegActionPerformed(e);
        	}
        });
		
		saveGraph = new JButton ("Save Graph Model");
		saveGraph.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent e){
        		saveGraphActionPerformed(e);
        	}
        });
		
		displayGraph = new JButton ("Display the Graph");
		displayGraph.addActionListener(new ActionListener(){
        	public void actionPerformed(ActionEvent e){
        		displayGraphActionPerformed(e);
        	}

        });
		

        jLabel1.setText("Tap on the image to select source and sink. First tap will select the source and second tap will select sink.");

       GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(image, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addComponent(saveSeg)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveGraph)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayGraph)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                	.addComponent(saveSeg)
                	.addComponent(saveGraph)
                	.addComponent(displayGraph)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(ActionEvent evt) {                                         
         JFileChooser fc = new JFileChooser();
                int result = fc.showOpenDialog(null);
                if (result == JFileChooser.APPROVE_OPTION) {
                    File file = fc.getSelectedFile();
                    try {
                        image.setIcon(new ImageIcon(ImageIO.read(file)));
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
    }                                        

    private void imageMouseClicked(MouseEvent evt) {                                   
    if(source==0){
    xsrc=evt.getX();
    ysrc=evt.getY();
    source=1;
    JOptionPane.showOptionDialog(null, "source selected "+xsrc+","+ysrc,"Empty?", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);   
    }
    else
        if(sink==0)
        {
            xsnk=evt.getX();
            ysnk=evt.getY();
            sink=1;
            JOptionPane.showOptionDialog(null, "sink selected "+xsnk+","+ysnk,"Empty?", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);   
        }

    }                                  

    private void jButton2ActionPerformed(ActionEvent evt) {                                         
       source=0;
        JOptionPane.showOptionDialog(null, "source removed "+xsrc+","+ysrc,"Empty?", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);   
            
    }                                        

    private void jButton3ActionPerformed(ActionEvent evt) {                                         
        sink=0;
        JOptionPane.showOptionDialog(null, "sink removed "+xsnk+","+ysnk,"Empty?", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);   
       
    }                                        

    private void jButton4ActionPerformed(ActionEvent evt) {                                         
        JOptionPane.showOptionDialog(null, "image segmentation started","Empty?", JOptionPane.DEFAULT_OPTION,JOptionPane.INFORMATION_MESSAGE, null, new Object[]{}, null);   
       
    }
    
    private void saveSegActionPerformed(ActionEvent e){
    	JOptionPane.showMessageDialog(null, "Save segmentation");
    }
   
    private void saveGraphActionPerformed(ActionEvent e) {
		JOptionPane.showMessageDialog(null, "Save Graph");
		
	}
    
    private void displayGraphActionPerformed(ActionEvent e) {
    	displayMenu();
    		}
  //method for the display the graph options
  		public static void displayMenu(){
  			JFrame frame = new JFrame("Display Menu");
  			frame.setVisible(true);
  			frame.setSize(300,300);
  			JButton bft = new JButton("Breadth-First Traversal");
  			JButton adj = new JButton("Adjacency List");
  			JButton dft = new JButton("Depth-First Traversal");
  			
  			JPanel panel = new JPanel(new GridBagLayout());
  			frame.getContentPane().add(panel);
  			GridBagConstraints c = new GridBagConstraints();
  			c.insets = new Insets(10,10,10, 10);
  			
  			c.gridx = 0;
  			c.gridy = 0;
  			panel.add(bft, c);
  			bft.addActionListener(new Action());
  			c.gridx = 0;
  			c.gridy = 1;
  			panel.add(adj, c);
  			adj.addActionListener(new Action());
  			c.gridx = 0;
  			c.gridy = 2;
  			panel.add(dft, c);
  			dft.addActionListener(new Action());
  		}

    public static class Action implements ActionListener{
		 
		public void actionPerformed(ActionEvent e){
			
			String ac = e.getActionCommand();
			 if(ac.equals("Breadth-First Traversal")){
				JOptionPane.showMessageDialog(null,"Breadth-First Traversal");
				//passing source or sink to breadthfirsttraversal
				//change so that it will display contents in JFrame/JPanel 
			 }
			else if(ac.equals("Adjacency List")){
				JOptionPane.showMessageDialog(null,"Adjacency List");
				//showAdjTable in graph class 
				//change so the it displays the contents in a JFrmae/JPanel
			}
			else if(ac.equals("Depth-First Traversal")){
				JOptionPane.showMessageDialog(null,"Depth-First Traversal");
				//passing source or sink to depthfirsttraversal
				//change so it will display the contents in JFrame/JPanel
			}
		}
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ui().setVisible(true);
            }
        });
    }                   
}
